// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nasurino.SmartWallet.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Nasurino.SmartWallet.Context.Migrations
{
    [DbContext(typeof(SmartWalletContext))]
    partial class SmartWalletContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.CashVault", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CashVault", (string)null);
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.SpendingArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SpendingArea", (string)null);
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FromCashVaultId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("MadeAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ToSpendingAreaId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("FromCashVaultId");

                    b.HasIndex("ToSpendingAreaId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.CashVault", b =>
                {
                    b.HasOne("Nasurino.SmartWallet.Entities.User", "User")
                        .WithMany("CashVaults")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.SpendingArea", b =>
                {
                    b.HasOne("Nasurino.SmartWallet.Entities.User", "User")
                        .WithMany("SpendingAreas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.Transaction", b =>
                {
                    b.HasOne("Nasurino.SmartWallet.Entities.CashVault", "CashVault")
                        .WithMany("Transactions")
                        .HasForeignKey("FromCashVaultId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nasurino.SmartWallet.Entities.SpendingArea", "SpendingArea")
                        .WithMany("Transactions")
                        .HasForeignKey("ToSpendingAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Nasurino.SmartWallet.Entities.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CashVault");

                    b.Navigation("SpendingArea");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.CashVault", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.SpendingArea", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Nasurino.SmartWallet.Entities.User", b =>
                {
                    b.Navigation("CashVaults");

                    b.Navigation("SpendingAreas");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
